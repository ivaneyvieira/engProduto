"use strict";
/******************************************************************************
 * This file is auto-generated by Vaadin.
 * If you want to customize the entry point, you can copy this file or create
 * your own `index.ts` in your frontend directory.
 * By default, the `index.ts` file should be in `./frontend/` folder.
 *
 * NOTE:
 *     - You need to restart the dev-server after adding the new `index.ts` file.
 *       After that, all modifications to `index.ts` are recompiled automatically.
 *     - `index.js` is also supported if you don't want to use TypeScript.
 ******************************************************************************/
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
// import Vaadin client-router to handle client-side and server-side navigation
var router_1 = require("@vaadin/router");
// import Flow module to enable navigation to Vaadin server-side views
var Flow_1 = require("@vaadin/flow-frontend/Flow");
var serverSideRoutes = new Flow_1.Flow({
    imports: function () { return Promise.resolve().then(function () { return require('../../build/frontend/generated-flow-imports'); }); }
}).serverSideRoutes;
var routes = __spreadArray([], serverSideRoutes // IMPORTANT: this must be the last entry in the array
, true);
// Vaadin router needs an outlet in the index.html page to display views
var router = new router_1.Router(document.querySelector('#outlet'));
router.setRoutes(routes);
